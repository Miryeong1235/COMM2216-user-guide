{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MySQL starting guide","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Hello\ud83d\udc4b This documentation guides you setting up your MySQL schema. We are going to explain how to create a schema, how to create test tables, and how to write <code>SELECT</code> statements to retrieve information from tables. We also provide sample SQL statements, so you can use MySQL by yourself and run queries without any prior knowledge.</p>"},{"location":"#about-sql-and-relational-database","title":"About SQL and relational database","text":"<p>\u201cSQL\u201d stands for \u201cStructured Query Language\u201d. SQL is designed for data definition, data manipulation, and data control, powerful enough to retrieve any piece of data from a database. MySQL is an open-source relational database provided by Oracle. </p> <p>A relational database stores data in separate tables rather than putting all the data in one big storeroom. The database structure is organized into physical files optimized for speed.  MySQL powers many most accessed applications, including Facebook, Twitter, Netflix, Uber, Airbnb, Shopify, and Booking.com. </p> <p>For more details, see Oracle official website.</p>"},{"location":"#intended-users","title":"Intended users","text":"<p>This documentation is targeted towards the following users:</p> <ul> <li>New BCIT CST Term 2 students who need to set up a MySQL database for an academic project.</li> <li>Beginner developers who don't have any knowledge about MySQL.</li> </ul>"},{"location":"#software-requirements","title":"Software requirements","text":"<p>Before proceeding, ensure you have following installed.</p> <ul> <li>MySQL community (v8.0.x)<ul> <li>For Windows, download from here</li> <li>For Mac, download from here</li> </ul> </li> <li>MySQL workbench<ul> <li>Download from here</li> </ul> </li> </ul> <p>MySQL community is a freely downloadable version of MySQL. MySQL workbench is the official graphic user interface (GUI) tool for MySQL.</p>"},{"location":"#procedures-overview","title":"Procedures overview","text":"<p>The main sections of the documentation are summarized below:</p> <ol> <li>Create a new schema</li> <li>Create test tables</li> <li>Retrieve information from tables</li> </ol>"},{"location":"#typographical-conventions","title":"Typographical conventions","text":"<p>We provide SQL statements in the following code blocks:</p> <ul> <li> <p>We provide some code snippets for explaining syntax in this format. <pre><code>SELECT column1, column2\nFROM table1;\n</code></pre></p> </li> <li> <p>We provide some sample codes to use in your MySQL in this format.</p> <p>Sample query</p> <pre><code>SELECT * \nFROM Dog;\n</code></pre> <p>The sample code is folded when it is long.</p> Sample Code <pre><code>&lt;!-- sample SQL code here --&gt;\n</code></pre> </li> </ul>"},{"location":"#notes-and-warning-messages","title":"Notes and warning messages","text":"<p>Throughout the documentation, we will use message blocks to notify you of relevant information.</p> <p>Warning</p> <p>Specifies content that must be read before proceeding. </p> <p>Info</p> <p>Indicated additional information or tips.</p> <p>Success</p> <p>Indicated what success looks like.</p>"},{"location":"create_new_schema/","title":"Create a schema","text":""},{"location":"create_new_schema/#overview","title":"Overview","text":"<p>In this section, you will create a new schema in your local instance. This step takes only a few minutes.</p>"},{"location":"create_new_schema/#open-a-connection","title":"Open a connection","text":"<ol> <li> <p>Open SQL Workbench. </p> <p>If MySQL server is already running, then you should see a screen like below. </p> </li> <li> <p>Click on the Connection \"Local Instance 3306\" shown on the Welcome page.</p> </li> </ol>"},{"location":"create_new_schema/#set-up-a-new-connection-optional","title":"Set up a new connection (optional)","text":"<p>If you do not have a connection shown on your Welcome page, follow the steps to set a new connection.</p> <ol> <li> <p>Press \"+\" button on Welcome page.     </p> </li> <li> <p>Set Connection Name and Hostname as <code>localhost</code> , and click \"OK\".     </p> <p>Info</p> <p>You can leave other fields as they are.</p> </li> <li> <p>Click on the connection that you have just created to open it.</p> <p>Info</p> <p>You may be asked for a password, then enter the password you set when installing MySQL.</p> </li> </ol>"},{"location":"create_new_schema/#create-a-new-schema","title":"Create a new schema","text":"<ol> <li>Click schema icon at the upper left corner of the window.</li> <li>Set schema name at Schema Editor and click \"Apply\". </li> <li> <p>Click \"Apply\" on the popup window. </p> </li> <li> <p>Close the popup window. </p> </li> </ol> <p>Success</p> <p>You can find your schema on schemas tab in the left column of MySQL workbench.</p>"},{"location":"create_new_schema/#conclusion","title":"Conclusion","text":"<p>By the end of this section, you will have successfully learned the following:</p> <ul> <li> How to create a connection in your local instance in MySQL</li> <li> How to create a new schema</li> </ul>"},{"location":"create_new_table/","title":"Create sample tables","text":""},{"location":"create_new_table/#overview","title":"Overview","text":"<p>In this section, you will create new tables in your local instance. You can also populate sample data to the tables. This step takes only a few minutes.</p>"},{"location":"create_new_table/#before-starting","title":"Before starting","text":"<p>You should have a schema created by following the previous section.</p>"},{"location":"create_new_table/#create-new-tables","title":"Create new tables","text":"<ol> <li> <p>Right-click on the schema you created, and choose \"Set as Default Schema\". </p> <p>Warning</p> <p>If you don't do this, you might mistakenly run queries on the wrong schema!</p> </li> <li> <p>Click \"File\" &gt; \"New Query tab\" to open a new query tab.</p> </li> <li> <p>Write queries to create tables on the editor. </p> <p>You can use the sample query below to create sample tables.</p> Example code for tables <pre><code>CREATE TABLE `Owner` (\n`ownerID` int PRIMARY KEY, \n`ownerName` varchar(64) DEFAULT NULL,\n`contactNumber` varchar(20) DEFAULT NULL,\n`city` varchar(20) DEFAULT NULL\n);\n\nCREATE TABLE `Dog` (\n`registerID` int PRIMARY KEY,\n`dogName` varchar(64) DEFAULT NULL,\n`dob` date DEFAULT NULL,\n`isFemale` bool DEFAULT true,\n`breed` char(64) DEFAULT NULL,\n`ownerID` int NOT NULL,\nFOREIGN KEY (ownerID) REFERENCES Owner(ownerID)\n);\n\nCREATE TABLE `Trainer` (\n`trainerID` int PRIMARY KEY,\n`trainerName` varchar(64) DEFAULT NULL,\n`contactNumber` varchar(20) DEFAULT NULL,\n`email` varchar(64) DEFAULT NULL,\n`specialization` varchar(20) DEFAULT NULL\n);\n\nCREATE TABLE `Training` (\n`trainingID` int PRIMARY KEY,\n`trainerID` int DEFAULT NULL,\n`dogRegisterID` int DEFAULT NULL,\n`trainingType` varchar(50) DEFAULT NULL,\n`startDate` date DEFAULT NULL,\n`endDate` date DEFAULT NULL,\nFOREIGN KEY (dogRegisterID) REFERENCES Dog(registerID),\nFOREIGN KEY (trainerID) REFERENCES Trainer(trainerID)\n);\n</code></pre> <p>Info</p> <p>If you want to use your own SQL file, click the SQL file button from the task bar. </p> </li> <li> <p>Click a left thunder icon to run the queries. </p> <p>Warning</p> <p>You only have to run the queries once.</p> <p>You will see the status of queries in Action Output.  Green check marks mean good, yellow triangles mean warning. Red is error.</p> <p></p> <p>Info</p> <p>If you don't see the action output, click the middle button on the upper right corner of window.  </p> </li> <li> <p>Right-click on the schema you created and select \"Refresh All\" to refresh the schema. </p> </li> <li> <p>Click the triangle to see a table list you have created. </p> </li> <li> <p>Close the editor tab where you wrote the queries.</p> <p>If the pop up window asks you if you want to save, you can click \"Don't save\".</p> </li> </ol>"},{"location":"create_new_table/#populate-sample-data","title":"Populate sample data","text":"<ol> <li> <p>Write INSERT statement about the data you want to populate.</p> <p>If you want to populate data using sample, you can use the sample query below.</p> Example code for population <pre><code>INSERT INTO Owner (ownerID, ownerName, contactNumber, city) VALUES \n(1, 'John Doe', '+1 (123) 456-7890', 'New York'),\n(2, 'Alice Smith', '+1 (234) 567-8901', 'Los Angeles'),\n(3, 'Michael Johnson', '+1 (345) 678-9012', 'Chicago'),\n(4, 'Emily Brown', '+1 (456) 789-0123', 'Houston'),\n(5, 'David Wilson', '+1 (567) 890-1234', 'Philadelphia'),\n(6, 'Emma Martinez', '+1 (678) 901-2345', 'Phoenix'),\n(7, 'Olivia Davis', '+1 (789) 012-3456', 'San Antonio');\n\n\nINSERT INTO `Dog` (`registerID`, `dogName`, `dob`, `isFemale`, `breed`, `ownerID`) VALUES\n(1, 'Max', '2021-05-15', false, 'Dachshund', 1),\n(2, 'Bella', '2018-05-20', true, 'Golden Retriever', 2),\n(3, 'Charlie', '2019-09-10', false, 'Poodle', 3),\n(4, 'Luna', '2021-03-25', true, 'Shih Tzu', 4),\n(5, 'Cooper', '2017-11-08', false, 'German Shepherd', 5),\n(6, 'Lucy', '2020-07-03', true, 'Beagle', 6),\n(7, 'Bailey', '2018-12-12', false, 'Siberian Husky', 7),\n(8, 'Daisy', '2019-04-30', true, 'Boxer', 2),\n(9, 'Rocky', '2016-08-17', false, 'Pug', 7), \n(10, 'Molly', '2022-01-10', true, 'Border Collie', 1);\n\n\nINSERT INTO Trainer (trainerID, trainerName, contactNumber, email, specialization) VALUES \n(201, 'Sarah Johnson', '+1 (111) 222-3333', 'sarah@example.com', 'Agility'),\n(202, 'Michael Brown', '+1 (222) 333-4444', 'michael@example.com', 'Behavioral'),\n(203, 'Emily Wilson', '+1 (333) 444-5555', 'emily@example.com', 'Obedience'),\n(204, 'Daniel Taylor', '+1 (444) 555-6666', 'daniel@example.com', 'Agility'),\n(205, 'Jessica Martinez', '+1 (555) 666-7777', 'jessica@example.com', 'Obedience'),\n(206, 'Ryan Thomas', '+1 (666) 777-8888', 'ryan@example.com', 'Agility'),\n(207, 'Lauren Harris', '+1 (777) 888-9999', 'lauren@example.com', 'Behavioral');\n\n\nINSERT INTO Training (trainingID, trainerID, dogRegisterID, trainingType, startDate, endDate) VALUES \n(1, 201, 1, 'Obedience', '2023-05-10', '2023-05-24'), \n(2, 202, 2, 'Behavioral', '2023-06-02', '2023-06-16'), \n(3, 203, 3, 'Obedience', '2023-06-15', '2023-06-29'),\n(4, 204, 4, 'Agility', '2023-07-05', '2023-07-19'), \n(5, 205, 5, 'Obedience', '2023-08-20', '2023-09-03'),\n(6, 206, 6, 'Agility', '2023-09-10', '2023-09-24'), \n(7, 207, 7, 'Behavioral', '2023-10-05', '2023-10-19'), \n(8, 201, 1, 'Agility', '2023-11-15', '2023-11-29'), \n(9, 202, 2, 'Obedience', '2023-12-02', '2023-12-16'), \n(10, 203, 3, 'Agility', '2024-01-10', '2024-01-24'); \n</code></pre> </li> <li> <p>Click a left thunder icon to run the queries in the same manner.</p> <p>Warning</p> <p>You only have to run the queries once.</p> <p>You will see the status of queries in Action Output. Green check marks mean good, yellow triangles mean warning. Red is error.</p> </li> <li> <p>Right-click on the schema you created and select \"Refresh All\" to refresh the schema.</p> </li> </ol>"},{"location":"create_new_table/#conclusion","title":"Conclusion","text":"<p>By the end of this section, you will have successfully learned the following:</p> <ul> <li> How to set a default schema in MySQL</li> <li> How to open a query editor</li> <li> How to create tables with SQL statements</li> </ul>"},{"location":"glossary/","title":"Glossary","text":"Term      \u3000 Definition   a\u3000 SQL statement A command used to perform various operations on a database. Examples of SQL statements include SELECT, INSERT, UPDATE, DELETE, CREATE TABLE, ALTER TABLE, and DROP TABLE. Schema A collection of database objects, such as tables, views, indexes, and constraints, organized and grouped together. It represents the overall structure or blueprint of the database. Table A basic unit of data storage. Data is stored in rows and columns. Query A specific command used to retrieve data from tables. Primary Key A column or set of columns in a database table that uniquely identifies each row in that table. Foreign Key A column or set of columns in a database table that establishes a relationship with the Primary Key of another table to maintain referential integrity."},{"location":"retrieve_information_from_tables/","title":"Retrieve information from tables","text":""},{"location":"retrieve_information_from_tables/#overview","title":"Overview","text":"<p>In this section, you will extract data with <code>SELECT</code> statements. A <code>SELECT</code> statement is a SQL query used to extract information from tables.  With <code>SELECT</code> statements, you can do the following:</p> <ul> <li>filter data with certain conditions</li> <li>sort data by certain attributes</li> <li>aggregate data (e.g. calculating sum, average and maximum values)</li> <li>join tables</li> </ul> <p>We will cover these operations with sample queries.</p> <p>We will introduce the basic syntax for <code>SELECT</code> statements needed for data extraction in Basic SQL syntax page.  Additionally, you can refer to MySQL official documentation for more information.</p>"},{"location":"retrieve_information_from_tables/#preparation","title":"Preparation","text":"<p>Open a new query tab by clicking \"File\" &gt; \"New Query Tab\"</p> <p>Success</p> <p>Now you are ready to write queries.</p>"},{"location":"retrieve_information_from_tables/#operations","title":"Operations","text":""},{"location":"retrieve_information_from_tables/#extracting-all-dogs-in-dog-table","title":"Extracting all dogs in Dog table","text":"<ol> <li> <p>Copy and paste the sample query.</p> <p>Sample query</p> <pre><code>SELECT * \nFROM Dog;\n</code></pre> </li> <li> <p>Click the left thunder icon to run the query.</p> <p>You will see the result in the result grid. </p> </li> </ol>"},{"location":"retrieve_information_from_tables/#extracting-male-dogs-born-before-2020","title":"Extracting male dogs born before 2020","text":"<ol> <li> <p>Copy and paste the sample query.</p> <p>Sample query</p> <pre><code>SELECT * \nFROM Dog\nWHERE isFemale = 0 AND dob &lt; '2020-01-01';\n</code></pre> </li> <li> <p>Click the left thunder icon to run the query.</p> <p>You will see the result in the result grid. </p> </li> </ol>"},{"location":"retrieve_information_from_tables/#getting-the-number-of-trainers-grouped-by-their-specialization","title":"Getting the number of trainers grouped by their specialization","text":"<ol> <li> <p>Copy and paste the sample query.</p> <p>Sample query</p> <pre><code>SELECT specialization, count(*) AS number_of_trainers\nFROM Trainer\nGROUP BY specialization;\n</code></pre> </li> <li> <p>Click the left thunder icon to run the query.</p> <p>You will see the result in the result grid. </p> </li> </ol>"},{"location":"retrieve_information_from_tables/#getting-the-combination-of-dogs-and-owners","title":"Getting the combination of dogs and owners","text":"<ol> <li> <p>Copy and paste the sample query.</p> <p>Sample query</p> <pre><code>SELECT dogName, ownerName\nFROM Dog\nJOIN `Owner` ON Dog.ownerID = `Owner`.ownerID;\n</code></pre> </li> <li> <p>Click the left thunder icon to run the query.</p> <p>You will see the result in the result grid. </p> </li> </ol>"},{"location":"retrieve_information_from_tables/#conclusion","title":"Conclusion","text":"<p>By the end of this section, you will have successfully experienced the following:</p> <ul> <li> How to retrieve information from tables with <code>SELECT</code> statements</li> <li> How to filter data with <code>WHERE</code> clauses</li> <li> How to group data with <code>GROUP BY</code> clauses</li> <li> How to get data from multiple tables with <code>JOIN</code> clauses</li> </ul> <p>If you want to learn SQL syntax, visit our Basic SQL syntax page or MySQL official documentation for more information.</p>"},{"location":"sql_syntax/","title":"Basic SQL syntax","text":"<p>We will introduce the basic syntax for SELECT statements needed for data extraction. For more information, you can refer to MySQL official documentation.</p>"},{"location":"sql_syntax/#selecting-columns","title":"Selecting columns","text":"<p>In SELECT statements, you can select columns to be shown in the result by listing the column name. The result of the query below only shows column1 and column2 for all data in table1. If you want to show all columns, use <code>*</code> instead of the column names.</p> <pre><code>SELECT column1, column2\nFROM table1;\n</code></pre>"},{"location":"sql_syntax/#adding-conditions","title":"Adding conditions","text":"<p>In SELECT statements, you can add conditions with <code>WHERE</code> clause. The result of the query below shows only data with a value 1 in column1.</p> <pre><code>SELECT * \nFROM table1 \nWHERE column1 = 1;\n</code></pre>"},{"location":"sql_syntax/#sorting","title":"Sorting","text":"<p>In SELECT statements, you can sort the result with <code>ORDER BY</code> clause.shows data in table1 in an ascending order by column1. If you want to sort the result with a descending order, add <code>DESC</code> after <code>ORDER BY</code> clause like <code>ORDER BY column1 DESC</code>.</p> <pre><code>SELECT * \nFROM table1 \nORDER BY column1;\n</code></pre>"},{"location":"sql_syntax/#aggregation","title":"Aggregation","text":"<p>For aggregation, you can use aggregation functions such as <code>SUM()</code> for calculating a total value, <code>COUNT()</code> for counting the number of rows, <code>AVG()</code> for calculating an average value. This query below returns the number of rows and the total added value of column1. <pre><code>SELECT SUM(column1), COUNT(column1)\nFROM table1;\n</code></pre></p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#troubleshooting","title":"Troubleshooting","text":"Problem Action I want to delete schema. Right click on the schema you want to delete. Click \"Drop Schema...\" I want to reset the root password. How to reset the root password  differs depending on your operation system. Please refer to the official website."}]}